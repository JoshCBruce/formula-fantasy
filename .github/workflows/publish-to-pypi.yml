name: Publish Formula Fantasy to PyPI

# Trigger on version tags (v1.0.0, v1.1.0, etc.)
on:
  push:
    tags:
      - 'v*.*.*'
  # Also allow manual triggering
  workflow_dispatch:

jobs:
  # Test the package before publishing
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
        pip install -e .
    
    - name: Test package imports
      run: |
        python -c "from formula_fantasy import get_driver_points, get_constructor_points"
        python -c "from formula_fantasy import list_drivers, list_constructors, get_latest_round"
        echo "✅ All imports successful"
    
    - name: Test CLI functionality
      run: |
        python -m formula_fantasy.cli --drivers
        echo "✅ CLI test successful"

  # Build and publish to PyPI
  publish-pypi:
    needs: test
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
    
    - name: Build package
      run: python -m build
    
    - name: Check package
      run: twine check dist/*
    
    - name: Publish to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: twine upload dist/*
    
    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          ## Formula Fantasy ${{ github.ref }}
          
          **Automated release published to PyPI**
          
          ### Installation
          ```bash
          pip install --upgrade formula-fantasy
          ```
          
          ### What's New
          - Check the commit history for detailed changes
          - Package available at: https://pypi.org/project/formula-fantasy/
          
          ### Verification
          ```python
          from formula_fantasy import get_driver_points
          print(get_driver_points("VER", "latest"))
          ```
        draft: false
        prerelease: false

  # Test installation from PyPI
  test-installation:
    needs: publish-pypi
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Wait for PyPI propagation
      run: sleep 60
    
    - name: Test installation from PyPI
      run: |
        pip install formula-fantasy
        python -c "from formula_fantasy import get_driver_points; print('✅ Installation successful')"
        formula-fantasy --drivers
        echo "✅ Package successfully published and tested"